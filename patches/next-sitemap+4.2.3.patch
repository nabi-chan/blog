diff --git a/node_modules/next-sitemap/dist/esm/builders/url-set-builder.js b/node_modules/next-sitemap/dist/esm/builders/url-set-builder.js
index b1edada..d7a4d8d 100644
--- a/node_modules/next-sitemap/dist/esm/builders/url-set-builder.js
+++ b/node_modules/next-sitemap/dist/esm/builders/url-set-builder.js
@@ -17,6 +17,9 @@ export class UrlSetBuilder {
      */
     absoluteUrl(siteUrl, path, trailingSlash) {
         const url = generateUrl(siteUrl, trailingSlash ? `${path}/` : path);
+        if (url.includes("/%2F")) {
+            return url.replace("/%2F", "")
+        }
         if (!trailingSlash && url.endsWith('/')) {
             return url.slice(0, url.length - 1);
         }
@@ -57,6 +60,7 @@ export class UrlSetBuilder {
                 ? Object.keys(this.manifest?.preRender?.routes ?? {})
                 : []),
             ...(this.manifest?.staticExportPages ?? []),
+            ...(this.manifest?.routes.staticRoutes.map((route) => route?.page) ?? []),
         ];
         // Filter out next.js internal urls and generate urls based on sitemap
         let urlSet = allKeys.filter((x) => !isNextInternalUrl(x));
@@ -78,13 +82,7 @@ export class UrlSetBuilder {
             }
         }
         urlSet = [...new Set(urlSet)];
-        // Remove routes which don't exist
-        const notFoundRoutes = (this.manifest?.preRender?.notFoundRoutes ??
-            []);
-        urlSet = urlSet.filter((url) => {
-            return (!notFoundRoutes.includes(url) &&
-                !notFoundRoutes.includes(`/${defaultLocale}${url}`));
-        });
+
         // Create sitemap fields based on transformation
         const sitemapFields = []; // transform using relative urls
         // Create a map of fields by loc to quickly find collisions
